AWS:
- We can host our app in cloud or over the internet and access it.
- EC2 (Virtual Machine): 
	- we can add a server and DB and scale it.
	Steps:
		- Choose AMI (linux, windowsOS)
		- Configure Instance
		- Configure Security Group:
			- firewall rules for your instance or to control the flow of traffic.
		 	- Custom TCP protocol, port range etc
		- We can create a key pair:
		 	- public key is stored by AWS and private key we store. Together we can connect to our instance securely.

- S3:
	- create S3 bucket and place our spring boot jar and from that bucket EC2 instance will get the jar and run our program.
	Steps:
		- set bucket name
		- allow public access
		- we can drop our jar there

- Elastic Beanstalk:
	- helps us manage our web app.
	- So internally it creates EC2 instance and we can add Tomcat server.

- Elastic Load Balancer:
	- helps us to redirect request to particular web app.

- DynamoDB:
	- scales DB automatically.

- RDS:
	- helps developer to setup, operate and scale relational DB in cloud.

- VPC:
	- provides virtual network environment for AWS resources.

- IAM (Identity and Access Management):
	- Allows secure control access to services/resources for users
	- Groups: collection of users
	- Roles: set of permissions for who can make what request
	- We need to create a group and assign policy as to what the user can access.

- ECS (elastic-container service)
	- container orchestration service makes it easy to run, and manage docker containers on cluster.

- EKS: 
	- makes it easy to deploy, manage and scale containerized application using kubernetes.
	- Nodes: where containers are deployed
	- Pods: running instances

- AWS Secrets Manager:
	- easy to manage secrets of large microservice based application.
	- it provides a central repo where we can control/access/moniter used by our microservices automatically.
	- If we have 10 microservices, then we dont need to configure the creditionals in each and every, instead they can directly consume from the AWS Secrets Manager in encrypted format.

- AWS Lambda:
	- It allows serverless programming meaning we can deploy our function on AWS lambda and test
	- we can create function and select what language we want to run

- AWS ECS:
	- how to deploy docker images on ECS.
	- ECS is a fully managed container orchestration service
	- If i create one ECS cluster, I can run n number of docker containers without additional configuration.

- AWS Fargate:
	- we need one more service wo will help us auto scale our containers.
	- Serverless engine for containers that work with ECS, allows us to run containers without configuration and scaling. It eliminates the need for EC2 instance.

	STEP:
		- spring boot app -> create docker image -> push to docker hub -> AWS ECS will pull that -> In this we will create Fargate cluster and run that docker container.


AWS Well-Architected Framework:

AWS Snowball: service is designed to transfer petabytes of data in and out of the cloud

AWS Artifact: service that provides access to AWS security and complicance reports.



AWS Lex: helps you build text chatbots
AWS Polly
AWS Transcribe
AWS Comprehend

AWS Aurora: has both MySQL and Postgres. Ideal for large organizations and enterprises


AWS Shield: protects from DDOS attack

AWS Web Application Firewall

AWS Elastic Block Store Snapshot: Incremental data backup  

Amazon CloudFront: reduces network latency

S3 Glacier Deep Archive: lowest cost for S3 storage service

Edge Locations: Data centers that deliver data fast to the users  

AWS Organizations service: helps you manage multiple AWS Accounts  

AWS Migration Strategy: 

WS Cloud Adoption Framework

AWS Marketplace: AWS Marketplace lets you list and sell software  

AWS SageMaker  : helps you reduce development time and complexity of Machine Learning (ML)


AWS Key Management Service (AWS KMS): service manages encryption and decryption of data

AWS DynamoDB Accelerator: Improves read times of non-relational data  

AWS CloudTrail: get complete history of user activity

AWS Cost Explorer: tool lets you visualise and manage your AWS costs

AWS Quantum Ledger Database : AWS database service proviced historical data of your application changes


AWS Trusted Advisor: cost optimization
